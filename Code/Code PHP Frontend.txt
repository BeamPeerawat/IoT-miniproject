Code dashboard\index.php :
<?php
require __DIR__.'/../config/database.php';
require 'models/sensor_model.php';
require 'models/device_model.php';
require 'models/activity_model.php';

$latestSensor = getLatestSensor($pdo);
$sensors = getSensorsLast10Minutes($pdo);
$devices = getAllDevices($pdo);
$activities = getRecentActivities($pdo);

include 'views/header.php';
include 'views/sensor_section.php';
include 'views/chart_section.php';
include 'views/device_section.php';
include 'views/activity_section.php';
include 'views/footer.php';
?>

Code dashboard\views\sensor_section.php :
<section id="sensors" class="card">
  <div class="card-header">
    <h2 class="card-title"><i class="fas fa-sensor"></i> สถานะเซนเซอร์ปัจจุบัน</h2>
    <span class="update-time">อัพเดทล่าสุด: <?= date('H:i:s') ?></span>
  </div>
  <div class="dashboard-grid">
    <div class="card">
      <h3>อุณหภูมิ</h3>
      <div class="sensor-value"><?= $latestSensor['temperature'] ?? '--' ?></div>
      <span class="sensor-unit">°C</span>
    </div>
    <div class="card">
      <h3>ความชื้น</h3>
      <div class="sensor-value"><?= $latestSensor['humidity'] ?? '--' ?></div>
      <span class="sensor-unit">%</span>
    </div>
    <div class="card">
      <h3>ความสว่าง</h3>
      <div class="sensor-value"><?= $latestSensor['light_level'] ?? '--' ?></div>
      <span class="sensor-unit">Lux</span>
    </div>
    <div class="card">
      <h3>การเคลื่อนไหว</h3>
      <div class="sensor-value"><?= ($latestSensor['motion_detected'] ?? false) ? 'ตรวจพบ' : 'ปกติ' ?></div>
    </div>
    <div class="card">
      <h3>ระดับเสียง</h3>
      <div class="sensor-value">
        <?= $latestSensor['sound_level'] ?? '--' ?>
        <span class="sensor-unit">dB</span>
      </div>
      <div class="sound-indicator">
        <?php if(($latestSensor['sound_level'] ?? 0) > 50): ?>
          <i class="fas fa-volume-up text-danger"></i> ตรวจพบเสียงดัง
        <?php else: ?>
          <i class="fas fa-volume-mute text-success"></i> ปกติ
        <?php endif; ?>
      </div>
    </div>
  </div>
</section>

Code dashboard\views\header.php :
<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ระบบบ้านอัจฉริยะ | Smart Home Dashboard</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Sarabun:wght@300;400;500&display=swap">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="css/styles.css">
</head>
<body>
<nav class="navbar">
    <div class="navbar-content">
        <a href="#" class="logo">
            <i class="fas fa-home"></i>
            Smart Home
        </a>
        <div class="nav-links">
            <a href="#sensors" class="nav-link"><i class="fas fa-thermometer-half"></i> เซนเซอร์</a>
            <a href="#devices" class="nav-link"><i class="fas fa-lightbulb"></i> อุปกรณ์</a>
            <a href="#activity" class="nav-link"><i class="fas fa-history"></i> ประวัติ</a>
            <button id="theme-toggle" class="theme-toggle-btn">
  <i class="fas fa-moon"></i> <!-- ไอคอนโหมดมืด -->
  <i class="fas fa-sun" style="display: none;"></i> <!-- ไอคอนโหมดสว่าง -->
</button>
        </div>
    </div>
</nav>
  <div class="container">

Code dashboard\views\footer.php :
</div>
<footer>
  <p>© 2023 Smart Home Dashboard</p>
  <p>Developed by [Your Name]</p>
</footer>

<!-- นำโค้ด JavaScript มาไว้ตรงนี้ -->
<script>
// กราฟแสดงข้อมูล
const ctx = document.getElementById('sensorChart').getContext('2d');
new Chart(ctx, {
  type: 'line',
  data: {
    labels: <?= json_encode(array_column($sensors, 'created_at')) ?>,
    datasets: [
      {
        label: 'อุณหภูมิ (°C)',
        data: <?= json_encode(array_column($sensors, 'temperature')) ?>,
        borderColor: '#4CAF50',
        tension: 0.1
      },
      {
        label: 'ความชื้น (%)',
        data: <?= json_encode(array_column($sensors, 'humidity')) ?>,
        borderColor: '#2196F3',
        tension: 0.1
      },
      {
        label: 'ความสว่าง (Lux)',
        data: <?= json_encode(array_column($sensors, 'light_level')) ?>,
        borderColor: '#FFC107',
        tension: 0.1
      },
      {
        label: 'การเคลื่อนไหว',
        data: <?= json_encode(array_column($sensors, 'motion_detected')) ?>,
        borderColor: '#F44336',
        tension: 0.1
      },
      {
        label: 'ระดับเสียง (dB)',
        data: <?= json_encode(array_column($sensors, 'sound_level')) ?>,
        borderColor: '#9C27B0',
        tension: 0.1
      }
    ]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    scales: {
      y: { beginAtZero: true }
    }
  }
});

// ฟังก์ชันสลับโหมด
const toggleTheme = () => {
  const currentTheme = document.documentElement.getAttribute('data-theme');
  const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
  
  // ตั้งค่าโหมดใหม่
  document.documentElement.setAttribute('data-theme', newTheme);
  
  // บันทึกโหมดใน localStorage
  localStorage.setItem('theme', newTheme);
  
  // อัปเดตไอคอน
  const moonIcon = document.querySelector('.fa-moon');
  const sunIcon = document.querySelector('.fa-sun');
  if (newTheme === 'dark') {
    moonIcon.style.display = 'none';
    sunIcon.style.display = 'inline-block';
  } else {
    sunIcon.style.display = 'none';
    moonIcon.style.display = 'inline-block';
  }
};

// ตั้งค่าโหมดเริ่มต้นจาก localStorage
const savedTheme = localStorage.getItem('theme') || 'light';
document.documentElement.setAttribute('data-theme', savedTheme);

// ตั้งค่าไอคอนเริ่มต้น
if (savedTheme === 'dark') {
  document.querySelector('.fa-moon').style.display = 'none';
  document.querySelector('.fa-sun').style.display = 'inline-block';
} else {
  document.querySelector('.fa-sun').style.display = 'none';
  document.querySelector('.fa-moon').style.display = 'inline-block';
}

// เพิ่ม Event Listener ให้ปุ่มสลับโหมด
document.getElementById('theme-toggle').addEventListener('click', toggleTheme);

// ควบคุมอุปกรณ์
// ควบคุมโหมด
document.querySelectorAll('.mode-btn').forEach(btn => {
  btn.addEventListener('click', async () => {
    const deviceId = btn.dataset.id;
    const newMode = btn.dataset.mode === 'manual' ? 1 : 0; // ใช้ 0 และ 1 แทน boolean

    try {
      const response = await fetch(`https://botxai.com/ECP4N/07_iot/smart-home/api/devices.php?api_key=y1xneVWfBv`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          device_id: deviceId,
          action: 'update',
          status: btn.closest('.device-card').querySelector('.toggle-btn').dataset.status,
          manual_override: newMode
        })
      });

      if (response.ok) {
        location.reload();
      } else {
        const errorData = await response.json();
        throw new Error(errorData.message || 'HTTP error: ' + response.status);
      }
    } catch (error) {
      Swal.fire({
        icon: 'error',
        title: 'เกิดข้อผิดพลาด!',
        text: error.message
      });
    }
  });
});

// ควบคุมเปิดปิด
document.querySelectorAll('.toggle-btn').forEach(btn => {
  btn.addEventListener('click', async () => {
    const deviceId = btn.dataset.id;
    const newStatus = btn.dataset.status === '1' ? 0 : 1; // สลับสถานะ (1 → 0, 0 → 1)

    try {
      const response = await fetch(`https://botxai.com/ECP4N/07_iot/smart-home/api/devices.php?api_key=y1xneVWfBv`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          device_id: deviceId,
          action: 'update',
          status: newStatus,
          manual_override: 1 // ตั้งค่าเป็นโหมดมือเมื่อคลิก
        })
      });

      if (response.ok) {
        Swal.fire({
          icon: 'success',
          title: 'สำเร็จ!',
          text: 'ปรับสถานะอุปกรณ์เรียบร้อย',
        }).then(() => location.reload()); // รีเฟรชหน้าเว็บ
      } else {
        const errorData = await response.json();
        throw new Error(errorData.message || 'HTTP error: ' + response.status);
      }
    } catch (error) {
      Swal.fire({
        icon: 'error',
        title: 'เกิดข้อผิดพลาด!',
        text: error.message
      });
    }
  });
});

// อัพเดทข้อมูลอัตโนมัติทุก 10 วินาที
setInterval(() => {
  fetch(window.location.href)
    .then(res => res.text())
    .then(html => {
      const parser = new DOMParser();
      const newDoc = parser.parseFromString(html, 'text/html');
      
      // อัพเดทข้อมูลเซนเซอร์
      document.querySelector('#sensors .dashboard-grid').innerHTML = 
        newDoc.querySelector('#sensors .dashboard-grid').innerHTML;
      
      // อัพเดทประวัติการทำงาน
      document.querySelector('#activity .activity-log').innerHTML = 
        newDoc.querySelector('#activity .activity-log').innerHTML;
    });
}, 10000);
</script>

</body>
</html>

Code dashboard\views\device_section.php :
<section id="devices" class="card">
  <div class="card-header">
    <h2 class="card-title"><i class="fas fa-plug"></i> ควบคุมอุปกรณ์</h2>
  </div>
  <div class="dashboard-grid">
    <?php foreach ($devices as $device): ?>
      <div class="device-card">
        <div class="device-info">
          <h3><?= htmlspecialchars($device['name']) ?></h3>
          <p class="device-location"><?= htmlspecialchars($device['location']) ?></p>
          <div class="device-status">
            <i class="fas fa-circle <?= $device['status'] ? 'text-success' : 'text-muted' ?>"></i>
            <span><?= $device['status'] ? 'เปิดใช้งาน' : 'ปิดอยู่' ?></span>
          </div>
        </div>

        <div class="device-controls">
          <!-- ปุ่มเปิด/ปิดอุปกรณ์ -->
          <button 
            class="toggle-btn <?= $device['manual_override'] ? 'manual-mode' : '' ?>"
            data-id="<?= $device['id'] ?>"
            data-status="<?= $device['status'] ?>"
            <?= $device['manual_override'] ? 'disabled' : '' ?>
          >
            <?= $device['status'] ? 'ปิด' : 'เปิด' ?>
          </button>

          <!-- ปุ่มสลับโหมด (อัตโนมัติ/มือ) -->
          <button 
            class="mode-btn"
            data-id="<?= $device['id'] ?>"
            data-mode="<?= $device['manual_override'] ? 'auto' : 'manual' ?>"
            data-manual-override="<?= $device['manual_override'] ?>"
          >
            <?= $device['manual_override'] ? 'โหมดอัตโนมัติ' : 'โหมดมือ' ?>
          </button>
        </div>
      </div>
    <?php endforeach; ?>
  </div>
</section>

Code dashboard\views\chart_section.php :
<section class="card">
  <div class="card-header">
    <h2 class="card-title"><i class="fas fa-chart-line"></i> ข้อมูลย้อนหลัง 10 นาที</h2>
  </div>
  <div class="chart-container">
    <canvas id="sensorChart"></canvas>
  </div>
</section>

Code dashboard\views\activity_section.php :
<section id="activity" class="card">
  <div class="card-header">
    <h2 class="card-title"><i class="fas fa-history"></i> ประวัติการทำงานล่าสุด</h2>
    <button class="refresh-btn" onclick="location.reload()"><i class="fas fa-sync-alt"></i> Refresh</button>
  </div>
  <div class="activity-log">
    <?php foreach ($activities as $log): ?>
      <div class="log-item <?= $log['type'] ?>">
        <div class="log-info">
          <?php switch($log['type']):
            case 'sensor': ?>
              <i class="fas fa-thermometer-half text-primary"></i>
            <?php break; ?>
            <?php case 'device': ?>
              <i class="fas fa-power-off text-success"></i>
            <?php break; ?>
            <?php case 'sound': ?>
              <i class="fas fa-volume-up text-danger"></i>
            <?php break; ?>
          <?php endswitch; ?>
          
          <div class="log-details">
            <div class="log-description"><?= htmlspecialchars($log['description']) ?></div>
            <div class="log-type"><?= strtoupper($log['type']) ?></div>
          </div>
        </div>
        <div class="log-time">
          <i class="fas fa-clock"></i>
          <?= date('H:i:s', strtotime($log['created_at'])) ?>
        </div>
      </div>
    <?php endforeach; ?>
  </div>
</section>

Code dashboard\models\sensor_model.php :
<?php
function getLatestSensor($pdo) {
    return $pdo->query("SELECT * FROM sensors ORDER BY created_at DESC LIMIT 1")->fetch(PDO::FETCH_ASSOC);
}

function getSensorsLast10Minutes($pdo) {
    return $pdo->query("SELECT * FROM sensors WHERE created_at >= NOW() - INTERVAL 10 MINUTE ORDER BY created_at ASC")->fetchAll(PDO::FETCH_ASSOC);
}
?>

Code dashboard\models\device_model.php :
<?php
function getAllDevices($pdo) {
    return $pdo->query("SELECT * FROM devices")->fetchAll(PDO::FETCH_ASSOC);
}
?>

Code dashboard\models\activity_model.php :
<?php
function getRecentActivities($pdo) {
    return $pdo->query("
        (SELECT 'sensor' AS type, created_at, 
            CONCAT('อุณหภูมิ: ', temperature, '°C, ความชื้น: ', humidity, '%, แสง: ', light_level, ' Lux, เสียง: ', sound_level, ' dB, การเคลื่อนไหว: ', IF(motion_detected, 'ตรวจพบ', 'ปกติ')) AS description 
        FROM sensors ORDER BY created_at DESC LIMIT 5)
        UNION
        (SELECT 'sound' AS type, created_at, 
            CONCAT('ตรวจพบเสียงดัง: ', sound_level, ' dB') AS description 
        FROM sensors WHERE sound_level > 50 ORDER BY created_at DESC LIMIT 5)
        UNION
        (SELECT 'device' AS type, last_updated AS created_at, 
            CONCAT('เปลี่ยนสถานะ ', name, ' เป็น ', IF(status, 'เปิด', 'ปิด')) AS description 
        FROM devices ORDER BY last_updated DESC LIMIT 5)
        ORDER BY created_at DESC
    ")->fetchAll(PDO::FETCH_ASSOC);
}
?>

Code dashboard\css\styles.css :
:root {
  --primary-color: #4CAF50;
  --secondary-color: #2196F3;
  --accent-color: #FFC107;
  --danger-color: #F44336;
  --background-color: #f8f9fa;
  --card-bg: #ffffff;
  --text-color: #333333;
  --border-radius: 12px;
  --box-shadow: 0 4px 6px rgba(0,0,0,0.08);
}

/* ========== ธีมมืด ========== */
[data-theme="dark"] {
  --primary-color: #66BB6A;
  --secondary-color: #64B5F6;
  --accent-color: #FFD54F;
  --danger-color: #EF5350;
  --background-color: #121212;
  --card-bg: #1e1e1e;
  --text-color: #e0e0e0;
  --box-shadow: 0 4px 6px rgba(0,0,0,0.2);
}

/* ========== ปุ่มสลับโหมด ========== */
.theme-toggle-btn {
  background: var(--primary-color);
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 8px;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  transition: all 0.3s ease;
}

.theme-toggle-btn:hover {
  opacity: 0.9;
  transform: translateY(-1px);
}

/* ปรับไอคอนเมื่อเปลี่ยนโหมด */
[data-theme="dark"] .fa-moon {
  display: none;
}

[data-theme="dark"] .fa-sun {
  display: inline-block;
}

[data-theme="light"] .fa-sun {
  display: none;
}

[data-theme="light"] .fa-moon {
  display: inline-block;
}

/* ========== ปรับปรุง Navbar สำหรับโหมดมืด ========== */
[data-theme="dark"] .navbar {
  background-color: var(--card-bg);
  box-shadow: 0 2px 5px rgba(0,0,0,0.3);
}

[data-theme="dark"] .logo {
  color: var(--text-color);
}

/* ========== ปรับปรุง Footer สำหรับโหมดมืด ========== */
[data-theme="dark"] footer {
  background-color: var(--card-bg);
  color: var(--text-color);
}

/* ========== ปรับปรุงการ์ดสำหรับโหมดมืด ========== */
[data-theme="dark"] .card {
  background: var(--card-bg);
  box-shadow: var(--box-shadow);
}

[data-theme="dark"] .card-header {
  border-bottom-color: rgba(255,255,255,0.1);
}

/* ========== ปรับปรุงปุ่มสำหรับโหมดมืด ========== */
[data-theme="dark"] .toggle-btn {
  background: var(--primary-color);
  color: white;
}

[data-theme="dark"] .mode-btn {
  background: rgba(255,255,255,0.1);
  color: var(--text-color);
  border-color: rgba(255,255,255,0.2);
}

[data-theme="dark"] .mode-btn:hover {
  background: rgba(255,255,255,0.15);
}

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  
  body {
    font-family: 'Sarabun', sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
    line-height: 1.6;
  }
  
  .navbar {
    background-color: var(--primary-color);
    padding: 1rem 2rem;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  }
  
  .navbar-content {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .logo {
    color: white;
    font-size: 1.5rem;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .logo i {
    font-size: 1.8rem;
  }
  
  .container {
    max-width: 1400px;
    margin: 2rem auto;
    padding: 0 1.5rem;
  }
  
  .dashboard-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }
  
  .card {
    border-radius: var(--border-radius);
    padding: 1.25rem;
    box-shadow: var(--box-shadow);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
  }
  
  .card:hover {
    transform: translateY(-3px);
  }
  
  .card-header {
    padding-bottom: 0.75rem;
    border-bottom: 1px solid rgba(0,0,0,0.08);
    margin-bottom: 1.25rem;
  }
  
  .card-title {
    font-size: 1.2rem;
    color: var(--primary-color);
  }
  
  .sensor-value {
    font-size: 2rem;
    font-weight: 500;
    margin: 0.5rem 0;
  }
  
  .sensor-unit {
    color: #666;
    font-size: 0.9rem;
  }
  
  .device-card {
    padding: 1.25rem;
    background: var(--card-bg);
    border-radius: var(--border-radius);
    border-left: 4px solid var(--primary-color);
    transition: transform 0.2s;
    display: grid;
    grid-template-columns: 1fr auto;
    align-items: center;
    gap: 1rem;
  }

  .device-controls {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    min-width: 120px;
  }
  
  .device-status {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .mode-btn {
    background: rgba(0,0,0,0.05);
    color: var(--text-color);
    border: 1px solid rgba(0,0,0,0.1);
    padding: 0.5rem 1rem;
    border-radius: 8px;
    font-size: 0.9rem;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    position: relative;
    overflow: hidden;
  }
  
  .mode-btn:before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(120deg, transparent, rgba(255,255,255,0.3), transparent);
    transition: 0.5s;
  }
  
  .mode-btn:hover {
    background: rgba(0,0,0,0.08);
    transform: translateY(-1px);
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  }
  
  .mode-btn:hover:before {
    left: 100%;
  }
  
  /* สไตล์เมื่ออยู่ในโหมดมือ */
  .mode-btn[data-mode="auto"] {
    background: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
  }
  

  .toggle-btn {
    background: var(--primary-color);
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    cursor: pointer;
    transition: opacity 0.2s;
  }
  
  .toggle-btn:hover {
    opacity: 0.9;
  }
  
  .activity-log {
    max-height: 400px;
    overflow-y: auto;
  }
  
  .log-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px;
    margin: 8px 0;
    background: var(--card-bg);
    border-radius: 8px;
    border-left: 4px solid;
    transition: transform 0.2s;
  }
  
  .log-item.sensor { border-color: #2196F3; }
  .log-item.device { border-color: #4CAF50; }
  .log-item.sound { border-color: #F44336; }
  
  .log-info {
    display: flex;
    align-items: center;
    gap: 15px;
    flex: 1;
  }
  
  .log-details {
    display: flex;
    flex-direction: column;
  }
  
  .log-description {
    font-weight: 500;
    color: var(--text-color);
  }
  
  .log-type {
    font-size: 0.8rem;
    color: #666;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
  
  .log-time {
    font-size: 0.9rem;
    color: #666;
    display: flex;
    align-items: center;
    gap: 5px;
  }
  
  .fa-thermometer-half { color: #2196F3; }
  .fa-power-off { color: #4CAF50; }
  .fa-volume-up { color: #F44336; }
  
  .refresh-btn {
    background: var(--primary-color);
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 6px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 5px;
  }
  
  .chart-container {
    height: 400px;
    margin: 2rem 0;
  }
  
  footer {
    background-color: var(--primary-color);
    color: white;
    text-align: center;
    padding: 1rem;
    margin-top: 3rem;
  }
  
  .sound-indicator {
    margin-top: 10px;
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 0.9rem;
  }
  
  .text-danger {
    color: #f44336;
  }
  
  .text-success {
    color: #4CAF50;
  }
  
  .fa-volume-up,
  .fa-volume-mute {
    font-size: 1.2rem;
  }
  
  @media (max-width: 768px) {
    .dashboard-grid {
      grid-template-columns: 1fr;
    }
    
    .navbar-content {
      flex-direction: column;
      gap: 1rem;
    }
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .device-card {
    animation: fadeIn 0.4s ease forwards;
  }

  @media (max-width: 768px) {
    .container {
      padding: 0 1rem;
      margin: 1.5rem auto;
    }
    
    .card {
      padding: 1rem;
    }
    
    .device-card {
      grid-template-columns: 1fr;
    }
    
    .mode-btn,
    .toggle-btn {
      width: 100%;
      justify-content: center;
    }
  }
  
  @media (max-width: 480px) {
    :root {
      --border-radius: 10px;
    }
    
    .card-title {
      font-size: 1.1rem;
    }
    
    .mode-btn {
      font-size: 0.85rem;
      padding: 0.4rem 0.8rem;
    }
  }